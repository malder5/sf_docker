---
- name: install postgres
  hosts: docker
  remote_user: ubuntu
  become: true

  vars:
    postgresql_version: "14"
    postgresql_bin_path: "/usr/lib/postgresql/{{ postgresql_version }}/bin"
    postgresql_data_dir: "/var/lib/postgresql/{{ postgresql_version }}/main"
    ansible_ssh_pipelining: true

    db_user: user1
    db_name: database1
    db_password: password

  tasks:
    - name: Install packages
      become_user: root
      ansible.builtin.apt:
        name:
          - postgresql
          - postgresql-contrib
          - libpq-dev
          - python3-psycopg2
        state: present

    - name: Check if PostgreSQL is initialized
      become_user: postgres
      ansible.builtin.stat:
        path: "{{ postgresql_data_dir }}/pg_hba.conf"
      register: postgres_data

    - name: Empty data dir
      become_user: root
      ansible.builtin.file:
        path: "{{ postgresql_data_dir }}"
        state: absent
      when: not postgres_data.stat.exists

    - name: Initialize PostgreSQL
      ansible.builtin.shell: "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}"
      become: true
      become_user: postgres
      when: not postgres_data.stat.exists

    - name: validate pg_hba.conf
      ansible.builtin.lineinfile:
        path: "{{ postgresql_data_dir }}/pg_hba.conf"
        state: present
        regexp: "^%# listen_addresses = 'localhost'"
        line: "listen_addresses = '*'"

    - name: validate postgresql.conf
      ansible.builtin.lineinfile:
        path: "{{ postgresql_data_dir }}/postgresql.conf"
        state: present
        regexp: "^#listen_addresses = 'localhost'"
        line: "listen_addresses = '*'"

    - name: Start and enable service
      ansible.builtin.service:
        name: postgresql
        state: started
        enabled: true

    - name: Create Database
      become_user: postgres
      postgresql_db:
        name: '{{ db_name }}'
        encoding: UTF-8
        state: present

    - name: Create User
      become_user: postgres
      postgresql_user:
        db: '{{ db_name }}'
        name: '{{ db_user }}'
        password: '{{ db_password }}'
        priv: all
        state: present


